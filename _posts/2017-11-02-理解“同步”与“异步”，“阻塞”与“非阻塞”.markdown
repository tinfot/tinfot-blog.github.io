---
layout: post
title:  "理解“同步”与“异步”，“阻塞”与“非阻塞”"
date:   2017-11-20 15:00:24 +0800
categories: Request
tags: Request
---

# “同步”与“异步”

## 同步
在发起一个请求的时候，在没有结果返回之前，这个请求不会结束，但是一旦调用返回，就得到返回值了。

请求发起方会主动等待请求的结果。

## 异步
在发出一个请求之后，这个请求就返回了，所以没有返回请求结果。

请求发出后，发起方不会立即得到结果，而是在请求发出后，被请求方通过`状态`，`通知`来告诉请求方，或者通过回调函数处理这次请求。

## 举个例子

### 同步
去商店买东西，进门后告诉老板：“我需要2个商品”。
老板回答说：“好的，您稍等，我找一下”。
然后时间过去了...（可能是5秒，也可能是1个钟头）
然后老板回复说：“找到了，这是你的东西”。（也可能找不到）

### 异步
去商店买东西，进门后告诉老板：“我需要2个商品”。
老板回答说：“好的，我找一下，找到之后给你打个电话，你先回去吧”。
然后时间过去了...（可能是5秒，也可能是1个钟头）
然后老板打电话来说：“找到了，这是你的东西”。（也可能找不到）
==*在这里老板通过“回电”这种方式来回调*==

# “阻塞”与“非阻塞”

`阻塞`与`非阻塞`关注的是程序在等待请求结果（消息，返回值）时的状态。

## 阻塞
指的是在请求结果返回之前，当前的线程会被挂起，请求线程只有在得到结果之后才会返回。

## 非阻塞
指的是请求结果不能立即返回之前，该请求不会阻塞当前线程。

## 举个例子

### 阻塞
去商店买东西，进门后告诉老板：“我需要2个商品”。
老板回答说：“好的，您站在这里等一下，我找一下看有没有”。
然后时间过去了...（可能是5秒，也可能是1个钟头）
然后老板回复说：“找到了，这是你的东西”。（也可能找不到）

### 非阻塞
去商店买东西，进门后告诉老板：“我需要2个商品”。
老板回答说：“好的，我找一下，你等一下再过来看看”。
然后时间过去了...（可能是5秒，也可能是1个钟头）
然后每隔5分钟（时间自定）回来问：“找到了吗？”。
然后老板回复说：“找到了，这是你的东西”。（也可能找不到说：“没找到，我再找一下，你过会再来”）
